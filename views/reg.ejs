<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">       
    <title><%= title %></title>
  
    <link rel="stylesheet" type="text/css" href="/stylesheets/bootstrap.min.css" />
    <link rel="stylesheet" type="text/css" href="/stylesheets/signin.css" />
  </head>
  <body>

<div id="container" class="container">
    <div id="container" class="container">
       <% if (locals.success) { %> 
          <div id="alt_sucess" class="alert alert-success"> 
            <%- success %> 
          </div> 
       <% } %> 

      <% if (locals.error) { %> 
        <div id="alt_warning" class="alert alert-warning"> 
          <%= error %> 
        </div> 
      <% } %> 

      <form class="form-signin" role="form" method="post">
        <h4 class="form-signin-heading">Register</h4>

        <input id="txtEmployeesName" name="txtEmployeesName" type="text" class="form-control" placeholder="username" required autofocus />
        <input id="txtEmployeesPwd" name="txtEmployeesPwd" type="password" class="form-control" placeholder="password" required/>
        <input id="txtEmployeesRePwd"  name="txtEmployeesRePwd" type="password" class="form-control" placeholder="repeat password" required/>
        <input id="txtIsManager" name="txtIsManager" type="text" class="form-control" placeholder="is manager?(Y=1/N=2)" required/>

        <button id="btnSub" class="btn btn-lg btn-primary" type="submit">Register</button>
        <a class="btn btn-link" href="/" role="button">home</a>

      </form>  
    </div> 

</body>
</html>

<script type="text/javascript" src="/javascripts/jquery-1.11.1.min.js" ></script>
<script type="text/javascript">
	String.prototype.format = function(args) {
		var result = this;
		if (arguments.length > 0) {
			if (arguments.length === 1 && typeof (args) == "object") {
				for (var key in args) {
					if (args[key] != undefined) {
						var reg = new RegExp("({" + key + "})", "g");
						result = result.replace(reg, args[key]);
					}
				}
			} else {
				for (var i = 0; i < arguments.length; i++) {
					if (arguments[i] != undefined) {
						var reg = new RegExp("({)" + i + "(})", "g");
						result = result.replace(reg, arguments[i]);
					}
				}
			}
		}
		return result;
	}

	$(function() {
		$('#btnSub').on('click', function() {
			var 
			$txtEmployeesName = $('#txtEmployeesName'),
			txtEmployeesNameVal = $.trim($txtEmployeesName.val()),

			$txtEmployeesPwd = $('#txtEmployeesPwd'),
			txtEmployeesPwdVal = $.trim($txtEmployeesPwd.val()),

			$txtEmployeesRePwd = $('#txtEmployeesRePwd'),
			txtEmployeesRePwdVal = $.trim($txtEmployeesRePwd.val()),

			$txtIsManager = $('#txtIsManager'),
			txtIsManagerVal = $.trim($txtIsManager.val()),

			errorTip = '<div id = "errorTip" class = "alert alert-warning">{0}</div>';
			// console.log(txtEmployeesPwdVal);
			// console.log(txtEmployeesRePwdVal);
			// return;
			$("#errorTip, #alt_sucess, $alt_warning").remove();

			if (txtEmployeesNameVal.length == 0) {
				$("#container").prepend(errorTip.format('The username can not be empty'));
				$txtEmployeesName.focus();
				return false;
			}

			if (txtEmployeesPwdVal.length == 0) {
				$("#container").prepend(errorTip.formant('The pasword can not be empty'));
				$txtEmployeesPwd.focus();
				return false;
			}

			if (txtEmployeesRePwdVal.length == 0) {
				$("#container").prepend(errorTip.format('The repassword can not be empty'));
				$txtEmployeesRePwd.focus();
				return false;
			}

			if (txtIsManagerVal.length == 0) {
				$("#container").prepend(errorTip.format('The value of isManager can not be empty'));
				$txtIsManager.focus();
				return false;
			}

			if (txtEmployeesPwdVal !== txtEmployeesRePwdVal) {
				$("#container").prepend(errorTip.format('The input password is different with the repassword'));
				$txtEmployeesPwd.focus();
				return false;
			}

			return true;
		})
	});
</script>